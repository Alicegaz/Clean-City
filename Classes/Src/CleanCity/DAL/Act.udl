Class Src.CleanCity.DAL.Act Extends Src.CleanCity.DAL.Base
{

ClassMethod GetById(id As %Integer) As Src.CleanCity.Data.Act
{
	set result = ##class(Src.CleanCity.Data.Act).%OpenId(id,,.sc)
	$$$do(sc)
	
	return result
}

ClassMethod GetByIdOrCreate(id As %Integer) As Src.CleanCity.Data.Act
{
	if (##class(Src.CleanCity.Data.Act).%ExistsId(id)){
		set result = ..GetById(id)
	}
	else{
		set result = ##class(Src.CleanCity.Data.Act).%New()
	}
	
	return result
}

// Get result set of acts by category

/*
ClassMethod GetOneCategory(name As %String) As %ResultSet
{
	set sql = "SELECT ID FROM Src_CleanCity_Data.Act WHERE CATEGORY = "_name
	set resultset = ..GetResultSetByQuery(sql)
	return resultset
}

// Get result set of acts by status

ClassMethod GetOneStatus(name As %String) As %ResultSet
{
	set sql = "SELECT ID FROM Src_CleanCity_Data.Act WHERE STATUS = "_name
	set resultset = ..GetResultSetByQuery(sql)
	return resultset
} */
/// Get result set by sql query
ClassMethod GetResultSetByQuery(sql As %String) As %ResultSet
{
	set resultset = ##class(%ResultSet).%New("%DynamicQuery:SQL")
	do resultset.Prepare(sql)
	do resultset.%Execute()
	
	return resultset
}

ClassMethod GetResultSetAll() As %ResultSet
{
	set sql = "SELECT ID FROM Src_CleanCity_Data.Act"
	set result = ..GetResultSetByQuery(sql)
	
	return result
}

ClassMethod Delete(id)
{
	$$$do(##class(Src.CleanCity.Data.Act).%DeleteId(id))
}

}

